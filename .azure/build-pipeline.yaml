# Triggers
trigger:
  branches:
    include:
      - 'master'
      - 'release-*'
pr:
  autoCancel: true
  branches:
    include:
      - '*'
# Jobs
jobs:
  - job: 'build_and_test'
    displayName: 'Build & Test'
    # Strategy for the job
    strategy:
      matrix:
        'java-8':
          image: 'Ubuntu-18.04'
          jdk_version: '1.8'
          jdk_path: '/usr/lib/jvm/java-8-openjdk-amd64'
        'java-11':
          image: 'Ubuntu-18.04'
          jdk_version: '11'
          jdk_path: '/usr/lib/jvm/java-11-openjdk-amd64'
    # Set timeout for jobs
    timeoutInMinutes: 60
    # Base system
    pool:
      vmImage: $(image)
    # Environment variables
    # variables:
    #   - template: "templates/default_variables.yaml"
    # Pipeline steps
    steps:
      - template: 'setup_java.yaml'
        parameters:
          JDK_PATH: $(jdk_path)
          JDK_VERSION: $(jdk_version)
      # - bash: |
      #     echo "BRANCH: $(BRANCH)"
      #     echo "TAG: $(TAG)"
      #     echo "COMMIT: $(COMMIT)"
      #     echo "PULL_REQUEST: $(PULL_REQUEST)"
      #     echo "COMMIT_MESSAGE: $(COMMIT_MESSAGE)"
      #     echo "REASON: $(Build.Reason)"
      #     echo "REPO_SLUG: $(REPO_SLUG)"
      #     echo "PATH: $(PATH)"
      #     echo "JAVA_HOME: $(JAVA_HOME)"
      #     echo "JAVA_VERSION: $(JAVA_VERSION)"
      #     java -version
      #     which java
      #   displayName: 'Print environment variables'
      - bash: ".azure/scripts/build.sh"
        env:
          BUILD_REASON: $(Build.Reason)
          BRANCH: $(Build.SourceBranch)
        displayName: "Build and test"
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: '**/TEST-*.xml'
          testRunTitle: "Unit & Integration tests"
        condition: always()
